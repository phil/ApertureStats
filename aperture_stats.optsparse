#! /usr/bin/env ruby
require 'optparse'
require 'ostruct'

module ApertureStats
  class OptionsParser

    #CODES = %w[iso-2022-jp shift_jis euc-jp utf8 binary]
    #CODE_ALIASES = { "jis" => "iso-2022-jp", "sjis" => "shift_jis" }

    #
    # Return a structure describing the options.
    #
    def self.parse(args)
      # The options specified on the command line will be collected in *options*.
      # We set default values here.
      options = OpenStruct.new
      #options.library = []
      #options.inplace = false
      #options.encoding = "utf8"
      #options.transfer_type = :auto
      options.verbose = false

      opt_parser = OptionParser.new do |opts|
        opts.banner = "Usage: #{__FILE__}.rb [options]"

        opts.separator ""
        opts.separator "Specific options:"

        # Mandatory argument.
        opts.on("-l", "--library LIBRARY",
                "Require the LIBRARY before executing your script") do |lib|
          options.library = lib
        end

        # Boolean switch.
        opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
          options.verbose = v
        end

        opts.separator ""
        opts.separator "Common options:"

        # No argument, shows at tail.  This will print an options summary.
        # Try it and see!
        opts.on_tail("--help", "Show this message") do
          puts opts
          exit
        end

        # Another typical switch to print the version.
        opts.on_tail("--version", "Show version") do
          puts OptionParser::Version.join('.')
          exit
        end
      end

      opt_parser.parse!(args)
      options
    end  # parse()

  end  # class OptparseExample
end

options = ApertureStats::OptionsParser.parse(ARGV)
#pp options
#pp ARGV


